/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class mist_node_MistNode */

#ifndef _Included_mist_node_MistNode
#define _Included_mist_node_MistNode
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     mist_node_MistNode
 * Method:    startMistApp
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_startMistApp
  (JNIEnv *, jobject, jstring);

/*
 * Class:     mist_node_MistNode
 * Method:    stopMistApp
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_stopMistApp
  (JNIEnv *, jobject);

/*
 * Class:     mist_node_MistNode
 * Method:    addEndpoint
 * Signature: (Lmist/node/Endpoint;)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_addEndpoint
  (JNIEnv *, jobject, jobject);

/*
 * Class:     mist_node_MistNode
 * Method:    removeEndpoint
 * Signature: (Lmist/node/Endpoint;)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_removeEndpoint
  (JNIEnv *, jobject, jobject);

/*
 * Class:     mist_node_MistNode
 * Method:    readResponse
 * Signature: (Ljava/lang/String;I[B)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_readResponse
  (JNIEnv *, jobject, jstring, jint, jbyteArray);

/*
 * Class:     mist_node_MistNode
 * Method:    readError
 * Signature: (Ljava/lang/String;IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_readError
  (JNIEnv *, jobject, jstring, jint, jint, jstring);

/*
 * Class:     mist_node_MistNode
 * Method:    writeResponse
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_writeResponse
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     mist_node_MistNode
 * Method:    writeError
 * Signature: (Ljava/lang/String;IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_writeError
  (JNIEnv *, jobject, jstring, jint, jint, jstring);

/*
 * Class:     mist_node_MistNode
 * Method:    invokeResponse
 * Signature: (Ljava/lang/String;I[B)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_invokeResponse
  (JNIEnv *, jobject, jstring, jint, jbyteArray);

/*
 * Class:     mist_node_MistNode
 * Method:    invokeError
 * Signature: (Ljava/lang/String;IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_invokeError
  (JNIEnv *, jobject, jstring, jint, jint, jstring);

/*
 * Class:     mist_node_MistNode
 * Method:    changed
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_mist_node_MistNode_changed
  (JNIEnv *, jobject, jstring);

/*
 * Class:     mist_node_MistNode
 * Method:    request
 * Signature: ([B[BLmist/node/MistNode/RequestCb;)I
 */
JNIEXPORT jint JNICALL Java_mist_node_MistNode_request
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jobject);

/*
 * Class:     mist_node_MistNode
 * Method:    wishRequest
 * Signature: ([BLmist/node/MistNode/RequestCb;)I
 */
JNIEXPORT jint JNICALL Java_mist_node_MistNode_wishRequest
  (JNIEnv *, jobject, jbyteArray, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class mist_node_MistNode_RequestCb */

#ifndef _Included_mist_node_MistNode_RequestCb
#define _Included_mist_node_MistNode_RequestCb
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class mist_node_MistNode_MistNodeApiHolder */

#ifndef _Included_mist_node_MistNode_MistNodeApiHolder
#define _Included_mist_node_MistNode_MistNodeApiHolder
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
